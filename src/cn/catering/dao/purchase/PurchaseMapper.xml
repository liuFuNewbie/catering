<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.purchase.PurchaseMapper">
<cache type="cn.catering.cache.RedisCache"></cache>
  <resultMap id="BaseResultMap" type="cn.catering.pojo.Purchase">
    <id column="purchaseId" jdbcType="INTEGER" property="purchaseId" />
    <result column="shoppingName" jdbcType="VARCHAR" property="shoppingName" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    purchaseId, shoppingName, number, unit, money, state, createDate
  </sql>
  <select id="selectByExample" parameterType="cn.catering.pojo.PurchaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase
    where purchaseId = #{purchaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchase
    where purchaseId = #{purchaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.catering.pojo.PurchaseExample">
    delete from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.catering.pojo.Purchase">
    insert into purchase (purchaseId, shoppingName, number, 
      unit, money, state, 
      createDate)
    values (#{purchaseId,jdbcType=INTEGER}, #{shoppingName,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.catering.pojo.Purchase">
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purchaseId != null">
        purchaseId,
      </if>
      <if test="shoppingName != null">
        shoppingName,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purchaseId != null">
        #{purchaseId,jdbcType=INTEGER},
      </if>
      <if test="shoppingName != null">
        #{shoppingName,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.catering.pojo.PurchaseExample" resultType="java.lang.Integer">
    select count(*) from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purchase
    <set>
      <if test="record.purchaseId != null">
        purchaseId = #{record.purchaseId,jdbcType=INTEGER},
      </if>
      <if test="record.shoppingName != null">
        shoppingName = #{record.shoppingName,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purchase
    set purchaseId = #{record.purchaseId,jdbcType=INTEGER},
      shoppingName = #{record.shoppingName,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=INTEGER},
      createDate = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.catering.pojo.Purchase">
    update purchase
    <set>
      <if test="shoppingName != null">
        shoppingName = #{shoppingName,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where purchaseId = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.catering.pojo.Purchase">
    update purchase
    set shoppingName = #{shoppingName,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      createDate = #{createDate,jdbcType=TIMESTAMP}
    where purchaseId = #{purchaseId,jdbcType=INTEGER}
  </update>
</mapper>