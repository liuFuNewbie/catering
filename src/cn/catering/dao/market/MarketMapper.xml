<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.market.MarketMapper">
<cache type="cn.catering.cache.RedisCache"></cache>
  <resultMap id="BaseResultMap" type="cn.catering.pojo.Market">
    <id column="marketId" jdbcType="INTEGER" property="marketId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="profitLoss" jdbcType="DECIMAL" property="profitLoss" />
    <result column="totalMoney" jdbcType="DECIMAL" property="totalMoney" />
    <result column="tableNo" jdbcType="INTEGER" property="tableNo" />
    <result column="dataTime" jdbcType="TIMESTAMP" property="dataTime" />
    <result column="menuId" jdbcType="INTEGER" property="menuId" />
    <result column="empId" jdbcType="INTEGER" property="empId" />
    <result column="memberId" jdbcType="INTEGER" property="memberId" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    marketId, number, profitLoss, totalMoney, tableNo, dataTime, menuId, empId, memberId
  </sql>
  <select id="selectByExample" parameterType="cn.catering.pojo.MarketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from market
    where marketId = #{marketId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from market
    where marketId = #{marketId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.catering.pojo.MarketExample">
    delete from market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.catering.pojo.Market">
    insert into market (marketId, number, profitLoss, 
      totalMoney, tableNo, dataTime, 
      menuId, empId, memberId
      )
    values (#{marketId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{profitLoss,jdbcType=DECIMAL}, 
      #{totalMoney,jdbcType=DECIMAL}, #{tableNo,jdbcType=INTEGER}, #{dataTime,jdbcType=TIMESTAMP}, 
      #{menuId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.catering.pojo.Market">
    insert into market
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="marketId != null">
        marketId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="profitLoss != null">
        profitLoss,
      </if>
      <if test="totalMoney != null">
        totalMoney,
      </if>
      <if test="tableNo != null">
        tableNo,
      </if>
      <if test="dataTime != null">
        dataTime,
      </if>
      <if test="menuId != null">
        menuId,
      </if>
      <if test="empId != null">
        empId,
      </if>
      <if test="memberId != null">
        memberId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="marketId != null">
        #{marketId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="profitLoss != null">
        #{profitLoss,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="tableNo != null">
        #{tableNo,jdbcType=INTEGER},
      </if>
      <if test="dataTime != null">
        #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.catering.pojo.MarketExample" resultType="java.lang.Integer">
    select count(*) from market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update market
    <set>
      <if test="record.marketId != null">
        marketId = #{record.marketId,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.profitLoss != null">
        profitLoss = #{record.profitLoss,jdbcType=DECIMAL},
      </if>
      <if test="record.totalMoney != null">
        totalMoney = #{record.totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.tableNo != null">
        tableNo = #{record.tableNo,jdbcType=INTEGER},
      </if>
      <if test="record.dataTime != null">
        dataTime = #{record.dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.menuId != null">
        menuId = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        empId = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        memberId = #{record.memberId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update market
    set marketId = #{record.marketId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      profitLoss = #{record.profitLoss,jdbcType=DECIMAL},
      totalMoney = #{record.totalMoney,jdbcType=DECIMAL},
      tableNo = #{record.tableNo,jdbcType=INTEGER},
      dataTime = #{record.dataTime,jdbcType=TIMESTAMP},
      menuId = #{record.menuId,jdbcType=INTEGER},
      empId = #{record.empId,jdbcType=INTEGER},
      memberId = #{record.memberId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.catering.pojo.Market">
    update market
    <set>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="profitLoss != null">
        profitLoss = #{profitLoss,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        totalMoney = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="tableNo != null">
        tableNo = #{tableNo,jdbcType=INTEGER},
      </if>
      <if test="dataTime != null">
        dataTime = #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="menuId != null">
        menuId = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        empId = #{empId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        memberId = #{memberId,jdbcType=INTEGER},
      </if>
    </set>
    where marketId = #{marketId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.catering.pojo.Market">
    update market
    set number = #{number,jdbcType=INTEGER},
      profitLoss = #{profitLoss,jdbcType=DECIMAL},
      totalMoney = #{totalMoney,jdbcType=DECIMAL},
      tableNo = #{tableNo,jdbcType=INTEGER},
      dataTime = #{dataTime,jdbcType=TIMESTAMP},
      menuId = #{menuId,jdbcType=INTEGER},
      empId = #{empId,jdbcType=INTEGER},
      memberId = #{memberId,jdbcType=INTEGER}
    where marketId = #{marketId,jdbcType=INTEGER}
  </update>
</mapper>