<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.business.BusinessMapper">
  <resultMap id="BaseResultMap" type="cn.catering.pojo.Business">
    <id column="businessId" jdbcType="INTEGER" property="businessId" />
    <result column="due" jdbcType="DECIMAL" property="due" />
    <result column="accountPaid" jdbcType="DECIMAL" property="accountPaid" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierId" />
    <result column="empId" jdbcType="INTEGER" property="empId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    businessId, due, accountPaid, createDate, remark, supplierId, empId
  </sql>
  <select id="selectByExample" parameterType="cn.catering.pojo.BusinessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from business
    where businessId = #{businessId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from business
    where businessId = #{businessId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.catering.pojo.BusinessExample">
    delete from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.catering.pojo.Business">
    insert into business (businessId, due, accountPaid, 
      createDate, remark, supplierId, 
      empId)
    values (#{businessId,jdbcType=INTEGER}, #{due,jdbcType=DECIMAL}, #{accountPaid,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{supplierId,jdbcType=INTEGER}, 
      #{empId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.catering.pojo.Business">
    insert into business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        businessId,
      </if>
      <if test="due != null">
        due,
      </if>
      <if test="accountPaid != null">
        accountPaid,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="supplierId != null">
        supplierId,
      </if>
      <if test="empId != null">
        empId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="due != null">
        #{due,jdbcType=DECIMAL},
      </if>
      <if test="accountPaid != null">
        #{accountPaid,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.catering.pojo.BusinessExample" resultType="java.lang.Integer">
    select count(*) from business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update business
    <set>
      <if test="record.businessId != null">
        businessId = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.due != null">
        due = #{record.due,jdbcType=DECIMAL},
      </if>
      <if test="record.accountPaid != null">
        accountPaid = #{record.accountPaid,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplierId = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        empId = #{record.empId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update business
    set businessId = #{record.businessId,jdbcType=INTEGER},
      due = #{record.due,jdbcType=DECIMAL},
      accountPaid = #{record.accountPaid,jdbcType=DECIMAL},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      supplierId = #{record.supplierId,jdbcType=INTEGER},
      empId = #{record.empId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.catering.pojo.Business">
    update business
    <set>
      <if test="due != null">
        due = #{due,jdbcType=DECIMAL},
      </if>
      <if test="accountPaid != null">
        accountPaid = #{accountPaid,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplierId = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        empId = #{empId,jdbcType=INTEGER},
      </if>
    </set>
    where businessId = #{businessId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.catering.pojo.Business">
    update business
    set due = #{due,jdbcType=DECIMAL},
      accountPaid = #{accountPaid,jdbcType=DECIMAL},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      supplierId = #{supplierId,jdbcType=INTEGER},
      empId = #{empId,jdbcType=INTEGER}
    where businessId = #{businessId,jdbcType=INTEGER}
  </update>
</mapper>