<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.material.MaterialMapper">
<cache type="cn.catering.cache.RedisCache"></cache>
  <resultMap id="BaseResultMap" type="cn.catering.pojo.Material">
    <id column="materialId" jdbcType="INTEGER" property="materialId" />
    <result column="materialName" jdbcType="VARCHAR" property="materialName" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="totalMoney" jdbcType="DECIMAL" property="totalMoney" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="dateTime" jdbcType="TIMESTAMP" property="dateTime" />
    <result column="navId" jdbcType="INTEGER" property="navId" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="payId" jdbcType="INTEGER" property="payId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    materialId, materialName, cost, unit, number, totalMoney, inventory, describe, dateTime, 
    navId, userId, payId
  </sql>
  <select id="selectByExample" parameterType="cn.catering.pojo.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material
    where materialId = #{materialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from material
    where materialId = #{materialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.catering.pojo.MaterialExample">
    delete from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.catering.pojo.Material">
    insert into material (materialId, materialName, cost, 
      unit, number, totalMoney, 
      inventory, describe, dateTime, 
      navId, userId, payId
      )
    values (#{materialId,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, #{cost,jdbcType=DECIMAL}, 
      #{unit,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{totalMoney,jdbcType=DECIMAL}, 
      #{inventory,jdbcType=INTEGER}, #{describe,jdbcType=VARCHAR}, #{dateTime,jdbcType=TIMESTAMP}, 
      #{navId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{payId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.catering.pojo.Material">
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="materialId != null">
        materialId,
      </if>
      <if test="materialName != null">
        materialName,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="totalMoney != null">
        totalMoney,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="describe != null">
        describe,
      </if>
      <if test="dateTime != null">
        dateTime,
      </if>
      <if test="navId != null">
        navId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="payId != null">
        payId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="materialId != null">
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="navId != null">
        #{navId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.catering.pojo.MaterialExample" resultType="java.lang.Integer">
    select count(*) from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material
    <set>
      <if test="record.materialId != null">
        materialId = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.materialName != null">
        materialName = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.totalMoney != null">
        totalMoney = #{record.totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.dateTime != null">
        dateTime = #{record.dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.navId != null">
        navId = #{record.navId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.payId != null">
        payId = #{record.payId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material
    set materialId = #{record.materialId,jdbcType=INTEGER},
      materialName = #{record.materialName,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=DECIMAL},
      unit = #{record.unit,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      totalMoney = #{record.totalMoney,jdbcType=DECIMAL},
      inventory = #{record.inventory,jdbcType=INTEGER},
      describe = #{record.describe,jdbcType=VARCHAR},
      dateTime = #{record.dateTime,jdbcType=TIMESTAMP},
      navId = #{record.navId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      payId = #{record.payId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.catering.pojo.Material">
    update material
    <set>
      <if test="materialName != null">
        materialName = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        totalMoney = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        dateTime = #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="navId != null">
        navId = #{navId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payId != null">
        payId = #{payId,jdbcType=INTEGER},
      </if>
    </set>
    where materialId = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.catering.pojo.Material">
    update material
    set materialName = #{materialName,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      totalMoney = #{totalMoney,jdbcType=DECIMAL},
      inventory = #{inventory,jdbcType=INTEGER},
      describe = #{describe,jdbcType=VARCHAR},
      dateTime = #{dateTime,jdbcType=TIMESTAMP},
      navId = #{navId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      payId = #{payId,jdbcType=INTEGER}
    where materialId = #{materialId,jdbcType=INTEGER}
  </update>
</mapper>