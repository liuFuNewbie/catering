<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.material.MaterialMapperCustom">
<cache type="cn.catering.cache.RedisCache"></cache>
	<select id="getMaterial" parameterType="map"
		resultType="cn.catering.pojo.MaterialExtension">
		SELECT m.materialId,u.userName,m.materialName,n.navName,
		m.cost,m.unit,p.payName,m.number, n.navId,p.payId
		,m.totalMoney,m.inventory,m.dateTime,m.`describe`
		FROM `user` as u
		INNER JOIN material as m ON u.userId=m.userId
		INNER JOIN navigation as
		n ON m.navId=n.navId
		INNER JOIN paytype as p ON m.payId=p.payId
		INNER
		JOIN menu as mu ON u.userId=mu.userId
		<trim prefix="where" prefixOverrides="and |or">
			<if test="type==1">
				and m.materialId=#{postName}
			</if>
			<if test="type==2">
				and mu.menuName LIKE CONCAT('%',#{postName},'%')
			</if>
			<if test="type==3">
				and u.userName LIKE CONCAT('%',#{postName},'%')
			</if>
		</trim>
		GROUP BY m.materialId
		LIMIT
		#{pageSupport.index},#{pageSupport.pageSize}
	</select>
	<!-- 获取数量 -->
	<select id="getMaterialCount" parameterType="map" resultType="cn.catering.pojo.MaterialExtension">
		   <!--  SELECT count(1) FROM material    -->
		  SELECT COUNT(m.materialId)
		FROM material as m,`user` as u,menu as
		mu,paytype as p ,navigation as n
		where m.userId=u.userId and u.userId=mu.userId and m.payId=p.payId and
		m.navId=n.navId
		<if test="type==1">
			and m.materialId=#{postName}
		</if>
		<if test="type==2">
			and mu.menuName LIKE CONCAT('%',#{postName},'%')
		</if>
		<if test="type==3">
			and u.userName LIKE CONCAT('%',#{postName},'%')
		</if>
		GROUP BY m.materialId  
	</select>

	<select id="getMaterialById" parameterType="int"
		resultType="cn.catering.pojo.MaterialExtension">
		SELECT
		m.materialId,u.userName,m.materialName,n.navName,p.payId,n.navId,
		m.cost,m.unit,p.payName,m.number
		,m.totalMoney,m.inventory,m.dateTime,m.`describe`
		FROM `user` as u
		INNER JOIN material as m ON u.userId=m.userId
		INNER JOIN navigation as
		n ON m.navId=n.navId
		INNER JOIN paytype as p ON m.payId=p.payId
		INNER
		JOIN menu as mu ON u.userId=mu.userId
		where m.materialId=#{Materiald}
		GROUP BY m.materialId
	</select>

	<update id="updateMaterialById" parameterType="int">
		UPDATE material
		<set>
			<trim suffixOverrides=",">
				<if test="material.materialName!=null">
					materialName=#{material.materialName},
				</if>
				<if test="material.cost!=null">
					cost=#{material.cost},
				</if>
				<if test="material.unit!=null">
					unit=#{material.unit},
				</if>
				<if test="material.number!=null">
					number=#{material.number},
				</if>
				<if test="material.inventory!=null">
					inventory=#{material.inventory},
				</if>
				<if test="material.navId!=null">
					navId=#{material.navId},
				</if>
				<if test="material.userId!=null">
					userId=#{material.userId},
				</if>
				<if test="material.payId!=null">
					payId=#{material.payId},
				</if>
				<if test="material.describe!=null">
					`describe`=#{material.describe},
				</if>
			</trim>
		</set>
		WHERE materialId=#{material.materialId}
	</update>

	<delete id="deleteMaterialById" parameterType="java.lang.Integer">
		delete from
		material
		where materialId = #{material}
	</delete>


	<insert id="insertMaterial" parameterType="cn.catering.pojo.Material">
		insert into material
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="material.materialName != null">
				materialName,
			</if>
			<if test="material.cost != null">
				cost,
			</if>
			<if test="material.unit != null">
				unit,
			</if>
			<if test="material.number != null">
				number,
			</if>
			<if test="material.totalMoney != null">
				totalMoney,
			</if>
			<if test="material.inventory != null">
				inventory,
			</if>
			<if test="material.describe != null">
				`describe`,
			</if>
			<if test="material.dateTime != null">
				dateTime,
			</if>
			<if test="material.navId != null">
				navId,
			</if>
			<if test="material.userId != null">
				userId,
			</if>
			<if test="material.payId != null">
				payId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="material.materialName != null">
				#{material.materialName},
			</if>
			<if test="material.cost != null">
				#{material.cost},
			</if>
			<if test="material.unit != null">
				#{material.unit},
			</if>
			<if test="material.number != null">
				#{material.number},
			</if>
			<if test="material.totalMoney != null">
				#{material.totalMoney},
			</if>
			<if test="material.inventory != null">
				#{material.inventory},
			</if>
			<if test="material.describe != null">
				#{material.describe},
			</if>
			<if test="material.dateTime != null">
				#{material.dateTime},
			</if>
			<if test="material.navId != null">
				#{material.navId},
			</if>
			<if test="material.userId != null">
				#{material.userId},
			</if>
			<if test="material.payId != null">
				#{material.payId},
			</if>
		</trim>
	</insert>

	<select id="getMaterialCountById" parameterType="int"
		resultType="int">
		select count(1) from material where payId = #{payId}
	</select>
</mapper>
