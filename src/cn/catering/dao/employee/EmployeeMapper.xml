<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.catering.dao.employee.EmployeeMapper">
<cache type="cn.catering.cache.RedisCache"></cache>
  <resultMap id="BaseResultMap" type="cn.catering.pojo.Employee">
    <id column="empId" jdbcType="INTEGER" property="empId" />
    <result column="empName" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="birthdate" jdbcType="TIMESTAMP" property="birthdate" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="identificationCard" jdbcType="CHAR" property="identificationCard" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="bonus" jdbcType="DECIMAL" property="bonus" />
    <result column="pose" jdbcType="INTEGER" property="pose" />
    <result column="resignDate" jdbcType="TIMESTAMP" property="resignDate" />
    <result column="changedDate" jdbcType="TIMESTAMP" property="changedDate" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="empTypeId" jdbcType="INTEGER" property="empTypeId" />
    <result column="majorId" jdbcType="INTEGER" property="majorId" />
    <result column="educationId" jdbcType="INTEGER" property="educationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    empId, empName, gender, phone, birthdate, address, identificationCard, salary, bonus, 
    pose, resignDate, changedDate, createDate, empTypeId, majorId, educationId
  </sql>
  <select id="selectByExample" parameterType="cn.catering.pojo.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where empId = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where empId = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.catering.pojo.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.catering.pojo.Employee">
    insert into employee (empId, empName, gender, 
      phone, birthdate, address, 
      identificationCard, salary, bonus, 
      pose, resignDate, changedDate, 
      createDate, empTypeId, majorId, 
      educationId)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{phone,jdbcType=BIGINT}, #{birthdate,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, 
      #{identificationCard,jdbcType=CHAR}, #{salary,jdbcType=DECIMAL}, #{bonus,jdbcType=DECIMAL}, 
      #{pose,jdbcType=INTEGER}, #{resignDate,jdbcType=TIMESTAMP}, #{changedDate,jdbcType=TIMESTAMP}, 
      #{createDate,jdbcType=TIMESTAMP}, #{empTypeId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER}, 
      #{educationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.catering.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        empId,
      </if>
      <if test="empName != null">
        empName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="identificationCard != null">
        identificationCard,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="bonus != null">
        bonus,
      </if>
      <if test="pose != null">
        pose,
      </if>
      <if test="resignDate != null">
        resignDate,
      </if>
      <if test="changedDate != null">
        changedDate,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="empTypeId != null">
        empTypeId,
      </if>
      <if test="majorId != null">
        majorId,
      </if>
      <if test="educationId != null">
        educationId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="identificationCard != null">
        #{identificationCard,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="bonus != null">
        #{bonus,jdbcType=DECIMAL},
      </if>
      <if test="pose != null">
        #{pose,jdbcType=INTEGER},
      </if>
      <if test="resignDate != null">
        #{resignDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changedDate != null">
        #{changedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empTypeId != null">
        #{empTypeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.catering.pojo.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.empId != null">
        empId = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        empName = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.birthdate != null">
        birthdate = #{record.birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.identificationCard != null">
        identificationCard = #{record.identificationCard,jdbcType=CHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.bonus != null">
        bonus = #{record.bonus,jdbcType=DECIMAL},
      </if>
      <if test="record.pose != null">
        pose = #{record.pose,jdbcType=INTEGER},
      </if>
      <if test="record.resignDate != null">
        resignDate = #{record.resignDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changedDate != null">
        changedDate = #{record.changedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.empTypeId != null">
        empTypeId = #{record.empTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.majorId != null">
        majorId = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.educationId != null">
        educationId = #{record.educationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set empId = #{record.empId,jdbcType=INTEGER},
      empName = #{record.empName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=BIGINT},
      birthdate = #{record.birthdate,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      identificationCard = #{record.identificationCard,jdbcType=CHAR},
      salary = #{record.salary,jdbcType=DECIMAL},
      bonus = #{record.bonus,jdbcType=DECIMAL},
      pose = #{record.pose,jdbcType=INTEGER},
      resignDate = #{record.resignDate,jdbcType=TIMESTAMP},
      changedDate = #{record.changedDate,jdbcType=TIMESTAMP},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      empTypeId = #{record.empTypeId,jdbcType=INTEGER},
      majorId = #{record.majorId,jdbcType=INTEGER},
      educationId = #{record.educationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.catering.pojo.Employee">
    update employee
    <set>
      <if test="empName != null">
        empName = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="identificationCard != null">
        identificationCard = #{identificationCard,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="bonus != null">
        bonus = #{bonus,jdbcType=DECIMAL},
      </if>
      <if test="pose != null">
        pose = #{pose,jdbcType=INTEGER},
      </if>
      <if test="resignDate != null">
        resignDate = #{resignDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changedDate != null">
        changedDate = #{changedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empTypeId != null">
        empTypeId = #{empTypeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        majorId = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="educationId != null">
        educationId = #{educationId,jdbcType=INTEGER},
      </if>
    </set>
    where empId = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.catering.pojo.Employee">
    update employee
    set empName = #{empName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=BIGINT},
      birthdate = #{birthdate,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      identificationCard = #{identificationCard,jdbcType=CHAR},
      salary = #{salary,jdbcType=DECIMAL},
      bonus = #{bonus,jdbcType=DECIMAL},
      pose = #{pose,jdbcType=INTEGER},
      resignDate = #{resignDate,jdbcType=TIMESTAMP},
      changedDate = #{changedDate,jdbcType=TIMESTAMP},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      empTypeId = #{empTypeId,jdbcType=INTEGER},
      majorId = #{majorId,jdbcType=INTEGER},
      educationId = #{educationId,jdbcType=INTEGER}
    where empId = #{empId,jdbcType=INTEGER}
  </update>
</mapper>