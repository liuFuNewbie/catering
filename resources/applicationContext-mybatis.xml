<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- 自动扫描包 -->
	<context:component-scan base-package="cn.catering.service"></context:component-scan>
	<!-- 导入配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 创建dbcp数据源对象-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="username" value="${mysql.user}"></property>
		<property name="password" value="${mysql.password}"></property>
		<property name="driverClassName" value="${mysql.driver}"></property>
		<property name="url" value="${mysql.url}"></property>
		<property name="initialSize" value="${mysql.dataSource.initialSize}"></property>
		<property name="maxIdle" value="${mysql.dataSource.maxIdle}"></property>
		<property name="minIdle" value="${mysql.dataSource.minIdle}"></property>
		<property name="maxActive" value="${mysql.dataSource.maxActive}"></property>
		<property name="maxWait" value="${mysql.dataSource.maxWait}"></property>
		<property name="testOnBorrow" value="${mysql.dataSource.testOnBorrow}"></property>
		<property name="testOnReturn" value="${mysql.dataSource.testOnReturn}"></property>
		<property name="testWhileIdle" value="${mysql.dataSource.testWhileIdle}"></property>
	</bean>
	<!-- 创建会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- 创建数据源事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 声明事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="delete*" rollback-for="SQLException" propagation="REQUIRED"/>
			<tx:method name="del*" rollback-for="SQLException" propagation="REQUIRED"/>
			<tx:method name="insert*" rollback-for="SQLException" propagation="REQUIRED"/>
			<tx:method name="add*" rollback-for="SQLException" propagation="REQUIRED"/>
			<tx:method name="update*" rollback-for="SQLException" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!-- 开启自动代理 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 切入事务 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.catering.service.*.*.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	<!-- 创建映射扫描配置器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.catering.dao"></property>
	</bean>
</beans>
